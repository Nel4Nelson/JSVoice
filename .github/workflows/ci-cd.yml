# .github/workflows/ci-cd.yml

name: CI/CD Pipeline

# Define when the workflow should run
on:
  push:
    branches:
      - main # 1. Trigger tests on push to the main branch
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*' # 2. Trigger release on pushing a new version tag (e.g., v1.0.0)
  pull_request:
    branches:
      - main # 3. Trigger tests on pull requests targeting the main branch

# =========================================================
# JOB 1: Test the code
# =========================================================
jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20 # Recommended LTS version
          
      - name: Install dependencies
        run: npm ci # Use 'npm ci' for clean, consistent installs in CI

      - name: Run tests and build check
        # This will fail the job if 'npm test' or 'npm run build' fails
        run: |
          npm run build # Ensure the build step works before testing/publishing
          npm test 

# =========================================================
# JOB 2: Publish to npm (Conditional)
# =========================================================
  publish-to-npm:
    name: Publish to npm
    # Condition: Only run if the previous 'test' job succeeded AND
    # the event was a Git tag push starting with 'v'
    if: success() && startsWith(github.ref, 'refs/tags/v')
    
    # Must wait for the 'test' job to finish successfully
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Node.js and npm Registry
        uses: actions/setup-node@v4
        with:
          node-version: 20
          # This is CRITICAL: configures npm to use the token
          registry-url: 'https://registry.npmjs.org' 

      - name: Install dependencies
        run: npm ci

      - name: Build artifact for publishing
        # Re-run build to ensure we use the distribution files
        run: npm run build 

      - name: Publish to npm
        run: npm publish --access public
        env:
          # Injects the secret token into the environment for 'npm publish'
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} 
          
      - name: Create GitHub Release (Optional but recommended)
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          # Use the tag name (e.g., v1.0.1) for the release title
          name: Release ${{ github.ref_name }} 
          body: |
            ## JSVoice ${{ github.ref_name }} Released!
            
            ðŸŽ‰ This release was automatically generated by GitHub Actions.
            
            [View changes here...](https://github.com/${{ github.repository }}/compare/${{ github.event.before }}...${{ github.sha }})
          # Set draft: true to review before publishing, or false to publish immediately
          draft: false
          prerelease: false